---
- hosts: 127.0.0.1
  connection: local
  vars:
    - root_directory: "/home/root/oracle"
    - environment_name: "dev"
    - container_registry: "container-registry.oracle.com"
    - container_registry_username: ""
    - container_registry_password: ""
    - container_registry_local: "localhost/"
    - autonomous_database_tag: "1"
    - weblogic_server_tag: "1"
    - weblogic_ords_version: "24.2.3.201.1847"
    - autonomous_database_wallet_password: "123456789aA123"
    - autonomous_admin_password: "123456789aA123"
    - weblogic_username: "hello"
    - weblogic_password: "123456789"
    - github_username: ""
    - github_password: ""
    - oracle_username: ""
    - oracle_password: ""
    - weblogic_image_tag: "1"
    - old_tag: ""
    - oracle_username: ""
    - oracle_password: ""
    - build_security_properties: |-
        username={{ weblogic_username }}
        password={{ weblogic_password }}
    - security_properties: |-
        username={{ weblogic_username }}
        password={{ weblogic_password }}
        JAVA_OPTIONS=-Dweblogic.StdoutDebugEnabled=true -Dweblogic.security.SSL.ignoreHostnameVerification=true
  tasks:
    - name: Print hostname information
      ansible.builtin.shell: |
        hostname
      args:
        executable: /bin/bash
      become: true

    - name: Login to  and create containers/auth.json
      containers.podman.podman_login:
        username: "{{ container_registry_username }}"
        password: "{{ container_registry_password }}"
        registry: "{{ container_registry }}"
      become: true

    - name: Clone a repo with separate git directory
      ansible.builtin.git:
        repo: https://{{ github_username }}:{{ github_password }}@github.com/MTA-IT-Middleware-Platform-Technology/ordsapps
        dest: /home/root/oracle
        version: main
        force: yes
      become: true

    - name: Install Java
      yum:
        name: java-1.8.0-openjdk
        state: present

    - name: Download imagetool
      ansible.builtin.shell: |
        export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64/
        curl -m 120 -fL https://github.com/oracle/weblogic-image-tool/releases/latest/download/imagetool.zip -o ./imagetool.zip
        unzip imagetool.zip
        cd imagetool/bin
        ./imagetool.sh cache addInstaller --type wls --version 14.1.1.0 --path /home/root/fmw_14.1.1.0.0_wls_lite_slim_Disk1_1of1.zip --force
        ./imagetool.sh cache addInstaller --type jdk --version 8u202 --path /home/root/jdk-8u202-linux-x64.tar.gz --force
        ./imagetool.sh imagetool rebase \
                       --sourceImage=localhost/oracle/weblogic:{{ old_tag }} \
                       --tag=oracle/weblogic:{{ old_tag }}-patched \
                       --builder=/usr/bin/podman \
                       --version 14.1.1.0 \
                       --fromImage=container-registry.oracle.com/middleware/weblogic:14.1.1.0-11 \
                       --latestPSU \
                       --user {{ oracle_username }} \
                       --password {{ oracle_password }}

    - name: Ensure weblogic-admin container is stopped
      ansible.builtin.systemd:
        name: container-weblogic-admin
        daemon_reload: true
        state: stopped
        enabled: true
      become: true
      ignore_errors: true

    - name: Ensure managed-server-1 container is stopped
      ansible.builtin.systemd:
        name: container-wls_ords1
        daemon_reload: true
        state: stopped
        enabled: true
      become: true
      ignore_errors: true

    - name: Ensure managed-server-2 container is stopped
      ansible.builtin.systemd:
        name: container-wls_ords1
        daemon_reload: true
        state: stopped
        enabled: true
      become: true
      ignore_errors: true

    - name: Creating a file with content
      copy:
        dest: "/home/root/properties/security.properties"
        content: "{{ security_properties }}"
      become: true

    - name: "Create the admin weblogic server container"
      containers.podman.podman_container:
        name: weblogic-admin
        hostname: weblogic-admin
        image: "{{ container_registry_local }}oracle/weblogic:{{ old_tag }}-patched"
        network: "oracle_network"
        network_aliases:
          - "AdminServer"
        publish:
          - 7001:7002
        volume:
          - "/home/root/properties:/u01/oracle/properties:Z"
        state: created
        rm: true
        recreate: true
      become: true

    - name: "Create the managed weblogic server container 1"
      containers.podman.podman_container:
        name: wls_ords1
        hostname: wls_ords1
        image: "{{ container_registry_local }}oracle/weblogic:{{ old_tag }}-patched"
        env:
          MANAGED_SERV_NAME: "WLS_ORDS1"
        publish:
          - 8001:8002
        volume:
          - "/home/root/properties:/u01/oracle/properties:Z"
        state: created
        rm: true
        recreate: true
        command: "startManagedServer.sh"
        network: "oracle_network"
        network_aliases:
          - "WLS_ORDS1"
        generate_systemd:
          names: true
          restart_policy: always
      become: true

    - name: "Create the managed weblogic server container 2"
      containers.podman.podman_container:
        name: wls_ords2
        hostname: wls_ords2
        image: "{{ container_registry_local }}oracle/weblogic:{{ old_tag }}-patched"
        env:
          MANAGED_SERV_NAME: "WLS_ORDS2"
        publish:
          - 8002:8002
        volume:
          - "/home/root/properties:/u01/oracle/properties:Z"
        state: created
        rm: true
        recreate: true
        command: "startManagedServer.sh"
        network: "oracle_network"
        network_aliases:
          - "WLS_ORDS2"
        generate_systemd:
          names: true
          restart_policy: always
      become: true

    - name: Generate systemd unit file for weblogic-admin
      containers.podman.podman_generate_systemd:
        name: weblogic-admin
        new: true
        no_header: true
        dest: /etc/systemd/system
      become: true

    - name: Ensure weblogic-admin container is started and enabled
      ansible.builtin.systemd:
        name: container-weblogic-admin
        daemon_reload: true
        state: started
        enabled: true
      become: true

    - name: Generate systemd unit file for managed-server-1
      containers.podman.podman_generate_systemd:
        name: wls_ords1
        new: true
        no_header: true
        dest: /etc/systemd/system
      become: true

    - name: Ensure managed-server-1 container is started and enabled
      ansible.builtin.systemd:
        name: container-wls_ords1
        daemon_reload: true
        state: started
        enabled: true
      become: true

    - name: Generate systemd unit file for managed-server-2
      containers.podman.podman_generate_systemd:
        name: wls_ords2
        new: true
        no_header: true
        dest: /etc/systemd/system
      become: true

    - name: Ensure managed-server-2 container is started and enabled
      ansible.builtin.systemd:
        name: container-wls_ords2
        daemon_reload: true
        state: started
        enabled: true
      become: true